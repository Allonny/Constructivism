#!/bin/bash

terminal="exo-open --launch TerminalEmulator"

notify_title="Обнавление системы"
notify_body="Все обновления системы были завершены успешно."
notify_body_error="Обнаружено несколько ошибок - "
notify_icon="update-low"
notify_icon_error="update-high"
notify_id=$(cat "$HOME/.local/scripts/notify-ids" | grep -oP "${0##*/} \K([\d]+)" || echo 0)

log_file="/tmp/update-log"

log_sfx=" 2>> $log_file ; echo \$? >> $log_file ; "

finish_line="Для выхода нажмите ENTER (в противном случае программа сама завершится через 2 минуты)"

commands=()
commands=("${commands[@]}" "/usr/bin/xbps-install -uy xbps $log_sfx")
commands=("${commands[@]}" "/usr/bin/xbps-install -Suy $log_sfx")
commands=("${commands[@]}" "/usr/bin/xbps-remove -Roy $log_sfx")
commands=("${commands[@]}" "/usr/bin/flatpak update -y $log_sfx")
commands=("${commands[@]}" "/usr/bin/flatpak remove --unused --delete-data -y $log_sfx")
commands=("${commands[@]}" "$(dirname "$0")/${0##*/} -n $USER ; echo -e '\a' ; ")
commands=("${commands[@]}" "read -t 120 -p \"$finish_line\" ; ")

check() {
    [ ! -f $log_file ] && exit 1
    errors_count=$(($(grep "^[1-9][0-9]*$" /tmp/update-log | wc -l)))
    if [[ errors_count -eq 0 ]]; then
        sudo -H -u $1 notify-send -u normal -r $notify_id -i "$notify_icon" "$notify_title" "$notify_body"
        exit 0
    fi
    errors=$(grep "^[^0-9].*$" $log_file)
    notify_body_error="$notify_body_error$errors_count:\n$errors"
    sudo -H -u $1 notify-send -u critical -r $notify_id -i "$notify_icon_error" "$notify_title" "$notify_body_error"
}

update() {
    command_line="${commands[@]}"
    rm $log_file 2> /dev/null ; touch $log_file
    pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY PATH=$PATH $terminal /bin/bash -c "$command_line"
    wait
}

help() {
    echo -e "Скрипт для упрощения применения обновлений системы.\n"
    echo -e "\t-t\t--terminal <name>\tИспользование конкретного эмулятора терминала\n\t\t\t\t\tвместо оного по-умолчанию.\n"
    echo -e "\t-c\t--command <name>\tДобавление произвольной команды в конец сценария.\n"
    echo -e "\t-n\t--notify <user>\t\tПроверка успешности обновлений и вывод\n\t\t\t\t\tуведомления о завершении стандартного сценария\n\t\t\t\t\t(вызывается автоматически).\n"
    echo -e "\t-s\t--script\t\tВывод списка команд сценария.\n"
    echo -e "\t-h\t--help\t\t\tВывод данной справки.\n"
	echo -e "Автор: allonny89"
}

script() {
    echo -e "Список команд сценария:\n"
    for command in "${commands[@]}" ; do
        echo -e "\t- $command\n"
    done
}

while [[ $# -gt 0 ]] ; do
    case $1 in
        "-t" | "--terminal")
            terminal="$2"
            shift
            ;;
        "-c" | "--command")
            commands=("${commands[@]}" "$2 ; ")
            shift
            ;;
        "-s" | "--script")
            script
            exit 0
            ;;
        "-h" | "--help")
            help
            exit 0
            ;;
        "-n" | "--notify")
            check $2
            exit 0
            ;;
        *)
            echo "Ошибка! Неизвестный аругмент $1."
            exit 1
            ;;
    esac

    shift
done

update
